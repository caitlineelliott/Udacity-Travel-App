{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/client/index.js","webpack:///./src/client/js/addPackingItem.js","webpack:///./src/client/js/app.js","webpack:///./src/client/js/getGeonames.js","webpack:///./src/client/js/getWeatherbit.js","webpack:///./src/client/js/updateUI.js","webpack:///./src/client/styles/base.scss?bb93","webpack:///./src/client/styles/header.scss?8ec8","webpack:///./src/client/styles/trip-form-output.scss?fa33","webpack:///./src/client/styles/trip-form.scss?643a"],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/client/index.js\");\n","import { makeDateAndTime } from './js/app'\nimport { generate } from './js/app'\nimport { postData } from './js/app'\nimport { getData } from './js/app'\nimport { getWeatherBit } from './js/getWeatherbit'\nimport { getGeonames } from './js/getGeonames'\nimport { updateUI } from './js/updateUI'\nimport { colorChange } from './js/app'\nimport { iconColor } from './js/app'\nimport { appendItem } from './js/addPackingItem'\nimport { togglePacked } from './js/addPackingItem'\n\nimport './styles/base.scss'\nimport './styles/header.scss'\nimport './styles/trip-form-output.scss'\nimport './styles/trip-form.scss'\n","document.querySelector('.packing-list-btn').addEventListener('click', createElements); // target packing list\ndocument.querySelector('.todo-list-btn').addEventListener('click', createElements); // target to do list\n\nfunction createElements(event) {\n    event.preventDefault();\n\n    const blockElements = {\n        \"newItemCategoryLabel\": document.createElement('div'),\n        \"newItemRow\": document.createElement('div'),\n    }\n\n    const rowElements = {\n        \"newItemValue\": document.createElement('textarea'),\n        \"packedFlag\": document.createElement('button'),\n        \"editBtn\": document.createElement('button'),\n        \"deleteBtn\": document.createElement('button'),\n    }\n\n    const checkboxElements = {\n        \"toggleIcon\": document.createElement('span'),\n        \"toggleLabel\": document.createElement('span'),\n    }\n\n    rowElements.newItemValue.readOnly = true;\n    rowElements.newItemValue.setAttribute('style', 'resize: none; ');\n\n    let target = event.target.classList.value;\n\n    setValues(target, blockElements, rowElements, checkboxElements);\n}\n\nfunction setValues(target, blockElements, rowElements, checkboxElements) {\n    console.log(document.querySelector(`.${target}-category`))\n\n    blockElements.newItemCategoryLabel.innerHTML = document.querySelector(`.${target}-category`).value;\n    blockElements.newItemCategoryLabel.id = document.querySelector(`.${target}-category`).value;\n    blockElements.newItemRow.classList.add('packing-list-row');\n\n    rowElements.editBtn.innerHTML = '<i class= \"fas fa-edit\"></i>';\n    rowElements.deleteBtn.innerHTML = '<i class= \"fas fa-times\"></i>';\n    rowElements.newItemValue.defaultValue = document.querySelector(`.${target}-item`).value;\n\n    checkboxElements.toggleIcon.innerHTML = '<i class= \"far fa-check-square\"></i>';\n    checkboxElements.toggleLabel.innerHTML = 'Packed';\n\n    document.querySelector(`.${target}-item`).value = '';\n\n    appendItem(target, blockElements, rowElements, checkboxElements);\n}\n\nfunction appendItem(target, blockElements, rowElements, checkboxElements) {\n    const categoryArr = []\n    let appendedElements = document.querySelector(`.${target}-container`).children;\n\n    for (let i = 0; i < appendedElements.length; i++) {\n        categoryArr.push(appendedElements[i].id);\n    }\n\n    if (!categoryArr.includes(blockElements.newItemCategoryLabel.id)) {\n        document.querySelector(`.${target}-container`).appendChild(blockElements.newItemCategoryLabel);\n        blockElements.newItemCategoryLabel.appendChild(blockElements.newItemRow);\n        console.log('new row')\n\n    } else {\n        let extantRow = document.querySelector(`#${blockElements.newItemCategoryLabel.id}`);\n        extantRow.appendChild(blockElements.newItemRow);\n        console.log('old row')\n    }\n\n    for (let i = 0; i < Object.keys(rowElements).length; i++) {\n        blockElements.newItemRow.appendChild(Object.values(rowElements)[i])\n        Object.values(rowElements)[i].id = Object.keys(rowElements)[i]\n        Object.values(rowElements)[i].classList.add('packing-item-row-segment')\n    }\n\n    rowElements.packedFlag.appendChild(checkboxElements.toggleIcon);\n    rowElements.packedFlag.appendChild(checkboxElements.toggleLabel);\n\n    document.querySelector('#packedFlag').addEventListener('click', function () {\n        blockElements.newItemRow.classList.toggle('packed');\n        if (checkboxElements.toggleIcon.innerHTML === '<i class= \"fas fa-check-square\"></i>') {\n            checkboxElements.toggleIcon.innerHTML = '<i class= \"far fa-check-square\"></i>'\n        } else {\n            checkboxElements.toggleIcon.innerHTML = '<i class= \"fas fa-check-square\" ></i >'\n        }\n    });\n\n    document.querySelector('#editBtn').addEventListener('click', function () {\n        rowElements.newItemValue.readOnly = false;\n        rowElements.newItemValue.setAttribute('style', 'width: 24vw; background: #c44536; color: #fff;');\n        let saveBtn = document.createElement('div');\n        saveBtn.innerHTML = '<i class= \"fas fa-save\"></i>';\n        saveBtn.classList.add('packing-item-row-segment', 'delete-btn');\n        saveBtn.setAttribute('style', 'width: 6vw; background: #c44536; color: #fff;');\n        newItemValue.insertAdjacentElement('afterend', saveBtn);\n        saveBtn.addEventListener('click', function () {\n            saveBtn.style.display = 'none';\n            newItemValue.setAttribute('style', 'width: 35vw; background: #197278; color: #fff; border: none;');\n            newItemValue.readOnly = true;\n        });\n    });\n\n    document.querySelector('#deleteBtn').addEventListener('click', function () {\n\n        console.log(event.target.parentElement.parentElement)\n        console.log(blockElements.newItemRow.children)\n\n        event.target.parentElement.parentElement.remove()\n\n        // blockElements.newItemRow.parentElement.removeChild(blockElements.newItemRow);\n    });\n}\n\nexport { createElements }","import { updateUI } from './updateUI'\nimport { getGeonames } from './getGeonames'\nimport { getWeatherBit } from './getWeatherbit'\n\n// Make Date + Time\nconst makeDateAndTime = () => {\n    const today = new Date();\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    let date = `${months[today.getMonth()]} ${today.getDate()}, ${today.getFullYear()}`;\n    if (today.getHours() > 12) {\n        let dateTime = `${date} | ${today.getHours() - 12}:${today.getMinutes()} p.m.`;\n        return dateTime;\n    } else {\n        let dateTime = `${date} | ${today.getHours()}:${today.getMinutes()} a.m.`;\n        return dateTime;\n    }\n};\n\n// Event listener to add function to existing HTML DOM element\ndocument.querySelector('.submit-btn').addEventListener('click', generate);\n\n/* Function called by event listener */\nasync function generate(event) {\n\n    // Get user trip dates + city\n    const tripCity = document.querySelector('.trip-city').value\n    const departDate = new Date(`${document.querySelector('.depart-date').value}T00:00:00`);\n    const returnDate = new Date(`${document.querySelector('.return-date').value}T00:00:00`);\n\n    // get geonames info\n    const geonamesInfo = await getGeonames(tripCity, 'ceelliott');\n    console.log(geonamesInfo);\n    let tripState = geonamesInfo.geonames[0].adminName1; // state\n    let userCountry = geonamesInfo.geonames[0].countryName; // country\n    let userCity = geonamesInfo.geonames[0].name; // city name\n\n    //trigger WeatherBit\n    let weatherInfo = await getWeatherBit(geonamesInfo.geonames[0].lat, geonamesInfo.geonames[0].lng);\n\n    updateUI(tripState, userCountry, userCity, departDate, returnDate, weatherInfo);\n\n    let bannerImg = await getHeaderPhoto(userCity);\n\n    document.querySelector('.banner').style.backgroundImage = `url('${bannerImg.hits[getRandomNum(0, bannerImg.hits.length)].largeImageURL}')`;\n\n    await postData('/api/add', {\n        city: tripCity,\n        departure: departDate,\n        arrival: returnDate\n    });\n\n    // await getData('/all');\n}\n\n// from MDN docs >>\nfunction getRandomNum(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nasync function getHeaderPhoto(userCity) {\n    try {\n        const request =\n            await fetch(`https://pixabay.com/api/?key=16153283-467e1a7d2957b8817b31c679d&q=${userCity}&image_type=photo&pretty=true&category=places&orientation=horizontal`);\n        return await request.json();\n    }\n    catch (e) {\n        console.log('FAILED TO FETCH GEONAMES API DATA:', e);\n    }\n}\n\n/* Function to POST data */\nconst postData = async (url = '', data = {}) => {\n    try {\n        console.log(`DATA SENT TO SERVER ${makeDateAndTime()}`);\n        const response = await fetch(url, {\n            method: 'POST',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        });\n        return await response.json();\n    }\n    catch {\n        console.log('FAILED TO POST DATA TO SERVER');\n    }\n};\n\n/* Function to GET Project Data */\nconst getData = async (url) => {\n    try {\n        const request = await fetch(url);\n        const data = await request.json();\n\n        // UPDATE UI\n        document.querySelector('#journal-prompt').style.display = \"none\";\n        document.querySelector('#entryContainer').style.display = \"block\";\n\n        // entry date\n        document.querySelector('#date-label').innerHTML = data.date;\n\n        // mood / weather / temp containers\n        let mood = document.querySelector('#moodIcon');\n        let weather = document.querySelector(\"#weather\");\n        let temp = document.querySelector('#temp');\n\n        // changes mood icon + temp to match weather icon from API\n        const colorChange = (hex) => {\n            mood.style.color = hex;\n            temp.style.color = hex;\n        };\n\n        const iconColor = () => {\n            if (parseInt(data.weather.slice(0, 2)) === 3) {\n                colorChange('#f2f2f1');\n            } else if (data.weather.includes('n')) {\n                colorChange('#48484a');\n            } else if (parseInt(data.weather.slice(0, 2)) < 3) {\n                colorChange('#ec6f4d');\n            } else if (parseInt(data.weather.slice(0, 2)) === 10) {\n                colorChange('#ec6f4d');\n            } else {\n                colorChange('#48484a');\n            }\n        };\n\n        iconColor();\n\n        // mood\n        mood.classList.add(`${data.moodLabel}`);\n        // mood name\n        document.querySelector('#mood-name').innerHTML = data.mood;\n\n        // weather\n        let weatherIcon = document.querySelector('#weather').firstElementChild;\n        weatherIcon.src = `http://openweathermap.org/img/wn/${data.weather}@2x.png`;\n        // weather name\n        document.querySelector('#weather-name').innerHTML = data.weatherName;\n\n        // temp\n        temp.innerHTML = data.temp;\n        // daily high + low\n        document.querySelector('#temp-feels').innerHTML = data.highLow;\n\n        // journal entry\n        let feelings = document.querySelector('#content');\n        feelings.innerText = data.entry;\n\n        console.log(`DATA POSTED TO UI ${makeDateAndTime()}`);\n    }\n    catch (e) {\n        console.log('DATA NOT RETREIVED FROM SERVER', e);\n    }\n};\n\n// EXTRA NON RUBRIC JS\n\n// back btn actions: remove previous entries + back btn + display prompt\n// document.querySelector('#back').addEventListener('click', function () {\n// window.location.reload();\n// });\n\n// export {\n//     makeDateAndTime,\n//     generate,\n//     postData,\n//     getData,\n//     getWeather\n// }","/* Function to GET Web API Data*/\nconst getGeonames = async (placename, username) => {\n\n    try {\n        const request =\n            await fetch(`http://api.geonames.org/searchJSON?q=${placename}&maxRows=1&username=${username}`);\n        return await request.json();\n    }\n\n    catch (e) {\n        console.log('FAILED TO FETCH GEONAMES API DATA:', e);\n    }\n};\n\nexport { getGeonames }","/* function to get weather data */\nconst getWeatherBit = async (lat, lng) => {\n    try {\n        const request =\n            await fetch(`https://api.weatherbit.io/v2.0/forecast/daily?&key=9723bbea9d1b4001877f42ad8068f478&lat=${lat}&lon=${lng}`);\n        return await request.json();\n    }\n    catch (e) {\n        console.log('no weatherbit data :(', e);\n    }\n}\n\nexport { getWeatherBit }","const monthNames = ['January', 'Februrary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nfunction updateUI(tripState, userCountry, userCity, departDate, returnDate, weatherInfo) {\n\n    console.log((((((returnDate.getTime() - departDate.getTime()) / 1000) / 60) / 60) / 24))\n\n    console.log(Math.abs(departDate.getDate() - returnDate.getDate()))\n    document.querySelector('.container').style.display = \"none\";\n\n    let forecast = weatherInfo.data;\n    console.log(forecast);\n\n    let dates = [];\n\n    for (let i = 0; i < forecast.length; i++) {\n        dates[i] = new Date(`${forecast[i].datetime}T00:00:00`);\n        console.log(dates[i]);\n    }\n\n    for (let i = 0; i < dates.length; i++) {\n        if (dates[i] >= departDate && dates[i] <= returnDate) {\n\n            const newRow = document.createElement('div');\n            newRow.classList.add('forecast-row');\n            document.querySelector('.forecast').appendChild(newRow)\n\n            const tripDate = document.createElement('div');\n            tripDate.classList.add('forecast-date');\n            tripDate.innerHTML = `${dates[i].getMonth() + 1} / ${dates[i].getDate()}`;\n            newRow.appendChild(tripDate);\n\n            const weatherIcon = document.createElement('img');\n            weatherIcon.classList.add('forecast-icon');\n            weatherIcon.src = `https://www.weatherbit.io/static/img/icons/${forecast[i].weather.icon}.png`;\n            newRow.appendChild(weatherIcon);\n\n            const weather = document.createElement('div');\n            weather.classList.add('forecast-high');\n            weather.innerHTML = `${forecast[i].high_temp}*F / ${forecast[i].low_temp}*F`;\n            newRow.appendChild(weather);\n        }\n        else if (returnDate >= dates[i]) {\n            let currentDate = new Date();\n            console.log(currentDate);\n            console.log(returnDate.getDate() - currentDate.getDate());\n        }\n\n        else {\n            console.log('feet');\n        }\n    }\n\n    const h1 = document.querySelector('.title');\n    const h2 = document.querySelector('.subtitle');\n    const output = document.querySelector('.output');\n    const currentDate = new Date();\n    output.classList.add('display-on');\n\n    h1.innerHTML = `${userCity}`;\n    // h2.innerHTML = '';\n\n    document.querySelector('#depart-date').innerHTML = `${monthNames[departDate.getMonth()]} ${departDate.getDate()}, ${departDate.getFullYear()}`;\n    document.querySelector('#arrive-date').innerHTML = `${monthNames[returnDate.getMonth()]} ${returnDate.getDate()}, ${returnDate.getFullYear()}`;\n    document.querySelector('#trip-days-count').innerHTML = ` ${(((((returnDate.getTime() - departDate.getTime()) / 1000) / 60) / 60) / 24) + 1} days`;\n    document.querySelector('#trip-nights-count').innerHTML = `${(((((returnDate.getTime() - departDate.getTime()) / 1000) / 60) / 60) / 24)} nights`;\n    document.querySelector('#trip-days-until').innerHTML = `${departDate.getDate() - currentDate.getDate()} days`;\n\n    console.log(Math.round((returnDate.getDate() - departDate.getDate()) / 24 * 60 * 60 * 1000))\n}\n\nexport { updateUI }","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}