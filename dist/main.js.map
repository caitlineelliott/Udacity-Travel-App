{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/workbox-broadcast-update/BroadcastCacheUpdate.js","webpack:///./node_modules/workbox-broadcast-update/BroadcastUpdatePlugin.js","webpack:///./node_modules/workbox-broadcast-update/_version.js","webpack:///./node_modules/workbox-broadcast-update/index.js","webpack:///./node_modules/workbox-broadcast-update/index.mjs","webpack:///./node_modules/workbox-broadcast-update/responsesAreSame.js","webpack:///./node_modules/workbox-broadcast-update/utils/constants.js","webpack:///./node_modules/workbox-core/_private/WorkboxError.js","webpack:///./node_modules/workbox-core/_private/assert.js","webpack:///./node_modules/workbox-core/_private/dontWaitFor.js","webpack:///./node_modules/workbox-core/_private/logger.js","webpack:///./node_modules/workbox-core/_private/resultingClientExists.js","webpack:///./node_modules/workbox-core/_private/timeout.js","webpack:///./node_modules/workbox-core/_version.js","webpack:///./node_modules/workbox-core/models/messages/messageGenerator.js","webpack:///./node_modules/workbox-core/models/messages/messages.js","webpack:///./src/client/index.js","webpack:///./src/client/js/app.js","webpack:///./src/client/styles/base.scss?bb93","webpack:///./src/client/styles/header.scss?8ec8","webpack:///./src/client/styles/trip-form-output.scss?fa33","webpack:///./src/client/styles/trip-form.scss?643a"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACyD;AACE;AAC4B;AAC9B;AACA;AAC+D;AACjG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,iBAAiB,mCAAmC,KAAK;AACzD,iDAAiD,4EAAwB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yDAAyD;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB;AACA,eAAe,MAAM;AACrB;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA,YAAY,IAAqC;AACjD,YAAY,qEAAM;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,qEAAM;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY,qEAAM;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa,6EAAgB;AAC7B,gBAAgB,IAAqC;AACrD,gBAAgB,qEAAM;AACtB;AACA;AACA,sBAAsB,8EAA0B;AAChD,sBAAsB,8EAA0B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2GAAqB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+EAAO;AACjC;AACA;AACA,yDAAyD,iBAAiB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACgC;;;;;;;;;;;;;ACtJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACmE;AACF;AAC1C;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,mBAAmB,SAAS;AAC5B,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B;AACA;AACA,YAAY,uFAAW;AACvB;AACA,oCAAoC,6EAAoB;AACxD;AACA;AACiC;;;;;;;;;;;;;AClDpB;AACb;AACA;AACA;AACA;AACA,WAAW;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACiE;AACE;AACV;AAClC;AACvB;AACA;AACA;AAC0E;;;;;;;;;;;;;ACd1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACqE;AACZ;AAClC;AACvB;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA,sBAAsB,iFAAY;AAClC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,YAAY,IAAqC;AACjD,YAAY,qEAAM;AAClB;AACA,YAAY,qEAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AAC4B;;;;;;;;;;;;;AClD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACwB;AACjB;AACA;AACA;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AAC0E;AAClD;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,wBAAwB,6FAAgB;AACxC;AACA;AACA;AACA;AACA;AACwB;;;;;;;;;;;;;AClCxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AAC2D;AACnC;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qEAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qEAAY;AAC9B;AACA;AACA;AACA;AACA;AACA,kBAAkB,qEAAY;AAC9B;AACA;AACA;AACA;AACA;AACA,kBAAkB,qEAAY;AAC9B;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D,kBAAkB,qEAAY;AAC9B;AACA;AACA;AACA,sBAAsB,qEAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAqC,GAAG,SAAI;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;;;;;;;;;;;;;ACjExC;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACwB;AACxB;AACA;AACA;AACA;AACA;AACO;AACP;AACA,wBAAwB,EAAE;AAC1B;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACwB;AACxB,gBAAgB,MAAqC,GAAG,SAAI;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACiB;;;;;;;;;;;;;AC7DlB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACuC;AACf;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACO;AACP;AACA;AACA;AACA,uDAAuD,iBAAiB;AACxE;AACA;AACA;AACA;AACA;AACA,uDAAuD,iBAAiB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,cAAc,2DAAO;AACrB;AACA;AACA;;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACwB;AACxB;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACO;AACP;AACA;;;;;;;;;;;;;ACjBa;AACb;AACA;AACA;AACA;AACA,WAAW;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACyC;AACd;AAC3B;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA,6CAA6C;AAC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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/client/index.js\");\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { resultingClientExists } from 'workbox-core/_private/resultingClientExists.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { responsesAreSame } from './responsesAreSame.js';\nimport { CACHE_UPDATED_MESSAGE_TYPE, CACHE_UPDATED_MESSAGE_META, DEFAULT_HEADERS_TO_CHECK } from './utils/constants.js';\nimport './_version.js';\n// UA-sniff Safari: https://stackoverflow.com/questions/7944460/detect-safari-browser\n// TODO(philipwalton): remove once this Safari bug fix has been released.\n// https://bugs.webkit.org/show_bug.cgi?id=201169\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n/**\n * Generates the default payload used in update messages. By default the\n * payload includes the `cacheName` and `updatedURL` fields.\n *\n * @return Object\n * @private\n */\nfunction defaultPayloadGenerator(data) {\n    return {\n        cacheName: data.cacheName,\n        updatedURL: data.request.url,\n    };\n}\n/**\n * Uses the `postMessage()` API to inform any open windows/tabs when a cached\n * response has been updated.\n *\n * For efficiency's sake, the underlying response bodies are not compared;\n * only specific response headers are checked.\n *\n * @memberof module:workbox-broadcast-update\n */\nclass BroadcastCacheUpdate {\n    /**\n     * Construct a BroadcastCacheUpdate instance with a specific `channelName` to\n     * broadcast messages on\n     *\n     * @param {Object} [options]\n     * @param {Array<string>} [options.headersToCheck=['content-length', 'etag', 'last-modified']]\n     *     A list of headers that will be used to determine whether the responses\n     *     differ.\n     * @param {string} [options.generatePayload] A function whose return value\n     *     will be used as the `payload` field in any cache update messages sent\n     *     to the window clients.\n     */\n    constructor({ headersToCheck, generatePayload, } = {}) {\n        this._headersToCheck = headersToCheck || DEFAULT_HEADERS_TO_CHECK;\n        this._generatePayload = generatePayload || defaultPayloadGenerator;\n    }\n    /**\n     * Compares two [Responses](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n     * and sends a message (via `postMessage()`) to all window clients if the\n     * responses differ (note: neither of the Responses can be\n     * {@link http://stackoverflow.com/questions/39109789|opaque}).\n     *\n     * The message that's posted has the following format (where `payload` can\n     * be customized via the `generatePayload` option the instance is created\n     * with):\n     *\n     * ```\n     * {\n     *   type: 'CACHE_UPDATED',\n     *   meta: 'workbox-broadcast-update',\n     *   payload: {\n     *     cacheName: 'the-cache-name',\n     *     updatedURL: 'https://example.com/'\n     *   }\n     * }\n     * ```\n     *\n     * @param {Object} options\n     * @param {Response} [options.oldResponse] Cached response to compare.\n     * @param {Response} options.newResponse Possibly updated response to compare.\n     * @param {Request} options.request The request.\n     * @param {string} options.cacheName Name of the cache the responses belong\n     *     to. This is included in the broadcast message.\n     * @param {Event} options.event event The event that triggered\n     *     this possible cache update.\n     * @return {Promise} Resolves once the update is sent.\n     */\n    async notifyIfUpdated(options) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(options.cacheName, 'string', {\n                moduleName: 'workbox-broadcast-update',\n                className: 'BroadcastCacheUpdate',\n                funcName: 'notifyIfUpdated',\n                paramName: 'cacheName',\n            });\n            assert.isInstance(options.newResponse, Response, {\n                moduleName: 'workbox-broadcast-update',\n                className: 'BroadcastCacheUpdate',\n                funcName: 'notifyIfUpdated',\n                paramName: 'newResponse',\n            });\n            assert.isInstance(options.request, Request, {\n                moduleName: 'workbox-broadcast-update',\n                className: 'BroadcastCacheUpdate',\n                funcName: 'notifyIfUpdated',\n                paramName: 'request',\n            });\n        }\n        // Without two responses there is nothing to compare.\n        if (!options.oldResponse) {\n            return;\n        }\n        if (!responsesAreSame(options.oldResponse, options.newResponse, this._headersToCheck)) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Newer response found (and cached) for:`, options.request.url);\n            }\n            const messageData = {\n                type: CACHE_UPDATED_MESSAGE_TYPE,\n                meta: CACHE_UPDATED_MESSAGE_META,\n                payload: this._generatePayload(options),\n            };\n            // For navigation requests, wait until the new window client exists\n            // before sending the message\n            if (options.request.mode === 'navigate') {\n                let resultingClientId;\n                if (options.event instanceof FetchEvent) {\n                    resultingClientId = options.event.resultingClientId;\n                }\n                const resultingWin = await resultingClientExists(resultingClientId);\n                // Safari does not currently implement postMessage buffering and\n                // there's no good way to feature detect that, so to increase the\n                // chances of the message being delivered in Safari, we add a timeout.\n                // We also do this if `resultingClientExists()` didn't return a client,\n                // which means it timed out, so it's worth waiting a bit longer.\n                if (!resultingWin || isSafari) {\n                    // 3500 is chosen because (according to CrUX data) 80% of mobile\n                    // websites hit the DOMContentLoaded event in less than 3.5 seconds.\n                    // And presumably sites implementing service worker are on the\n                    // higher end of the performance spectrum.\n                    await timeout(3500);\n                }\n            }\n            const windows = await self.clients.matchAll({ type: 'window' });\n            for (const win of windows) {\n                win.postMessage(messageData);\n            }\n        }\n    }\n}\nexport { BroadcastCacheUpdate };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { BroadcastCacheUpdate } from './BroadcastCacheUpdate.js';\nimport './_version.js';\n/**\n * This plugin will automatically broadcast a message whenever a cached response\n * is updated.\n *\n * @memberof module:workbox-broadcast-update\n */\nclass BroadcastUpdatePlugin {\n    /**\n     * Construct a BroadcastCacheUpdate instance with the passed options and\n     * calls its [`notifyIfUpdated()`]{@link module:workbox-broadcast-update.BroadcastCacheUpdate~notifyIfUpdated}\n     * method whenever the plugin's `cacheDidUpdate` callback is invoked.\n     *\n     * @param {Object} [options]\n     * @param {Array<string>} [options.headersToCheck=['content-length', 'etag', 'last-modified']]\n     *     A list of headers that will be used to determine whether the responses\n     *     differ.\n     * @param {string} [options.generatePayload] A function whose return value\n     *     will be used as the `payload` field in any cache update messages sent\n     *     to the window clients.\n     */\n    constructor(options) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-sw` and `workbox-runtime-caching` handlers when an entry is\n         * added to a cache.\n         *\n         * @private\n         * @param {Object} options The input object to this function.\n         * @param {string} options.cacheName Name of the cache being updated.\n         * @param {Response} [options.oldResponse] The previous cached value, if any.\n         * @param {Response} options.newResponse The new value in the cache.\n         * @param {Request} options.request The request that triggered the update.\n         * @param {Request} options.event The event that triggered the update.\n         */\n        this.cacheDidUpdate = async (options) => {\n            dontWaitFor(this._broadcastUpdate.notifyIfUpdated(options));\n        };\n        this._broadcastUpdate = new BroadcastCacheUpdate(options);\n    }\n}\nexport { BroadcastUpdatePlugin };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:broadcast-update:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { BroadcastCacheUpdate } from './BroadcastCacheUpdate.js';\nimport { BroadcastUpdatePlugin } from './BroadcastUpdatePlugin.js';\nimport { responsesAreSame } from './responsesAreSame.js';\nimport './_version.js';\n/**\n * @module workbox-broadcast-update\n */\nexport { BroadcastCacheUpdate, BroadcastUpdatePlugin, responsesAreSame, };\n","export * from './index.js';","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * Given two `Response's`, compares several header values to see if they are\n * the same or not.\n *\n * @param {Response} firstResponse\n * @param {Response} secondResponse\n * @param {Array<string>} headersToCheck\n * @return {boolean}\n *\n * @memberof module:workbox-broadcast-update\n */\nconst responsesAreSame = (firstResponse, secondResponse, headersToCheck) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(firstResponse instanceof Response &&\n            secondResponse instanceof Response)) {\n            throw new WorkboxError('invalid-responses-are-same-args');\n        }\n    }\n    const atLeastOneHeaderAvailable = headersToCheck.some((header) => {\n        return firstResponse.headers.has(header) &&\n            secondResponse.headers.has(header);\n    });\n    if (!atLeastOneHeaderAvailable) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.warn(`Unable to determine where the response has been updated ` +\n                `because none of the headers that would be checked are present.`);\n            logger.debug(`Attempting to compare the following: `, firstResponse, secondResponse, headersToCheck);\n        }\n        // Just return true, indicating the that responses are the same, since we\n        // can't determine otherwise.\n        return true;\n    }\n    return headersToCheck.every((header) => {\n        const headerStateComparison = firstResponse.headers.has(header) ===\n            secondResponse.headers.has(header);\n        const headerValueComparison = firstResponse.headers.get(header) ===\n            secondResponse.headers.get(header);\n        return headerStateComparison && headerValueComparison;\n    });\n};\nexport { responsesAreSame };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const CACHE_UPDATED_MESSAGE_TYPE = 'CACHE_UPDATED';\nexport const CACHE_UPDATED_MESSAGE_META = 'workbox-broadcast-update';\nexport const DEFAULT_HEADERS_TO_CHECK = [\n    'content-length',\n    'etag',\n    'last-modified',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    promise.then(() => { });\n}\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { timeout } from './timeout.js';\nimport '../_version.js';\nconst MAX_RETRY_TIME = 2000;\n/**\n * Returns a promise that resolves to a window client matching the passed\n * `resultingClientId`. For browsers that don't support `resultingClientId`\n * or if waiting for the resulting client to apper takes too long, resolve to\n * `undefined`.\n *\n * @param {string} [resultingClientId]\n * @return {Promise<Client|undefined>}\n * @private\n */\nexport async function resultingClientExists(resultingClientId) {\n    if (!resultingClientId) {\n        return;\n    }\n    let existingWindows = await self.clients.matchAll({ type: 'window' });\n    const existingWindowIds = new Set(existingWindows.map((w) => w.id));\n    let resultingWindow;\n    const startTime = performance.now();\n    // Only wait up to `MAX_RETRY_TIME` to find a matching client.\n    while (performance.now() - startTime < MAX_RETRY_TIME) {\n        existingWindows = await self.clients.matchAll({ type: 'window' });\n        resultingWindow = existingWindows.find((w) => {\n            if (resultingClientId) {\n                // If we have a `resultingClientId`, we can match on that.\n                return w.id === resultingClientId;\n            }\n            else {\n                // Otherwise match on finding a window not in `existingWindowIds`.\n                return !existingWindowIds.has(w.id);\n            }\n        });\n        if (resultingWindow) {\n            break;\n        }\n        // Sleep for 100ms and retry.\n        await timeout(100);\n    }\n    return resultingWindow;\n}\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`);\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return `workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`;\n    },\n};\n","import { makeDateAndTime } from './js/app'\nimport { generate } from './js/app'\nimport { postData } from './js/app'\nimport { getData } from './js/app'\nimport { getWeather } from './js/app'\nimport { colorChange } from './js/app'\nimport { iconColor } from './js/app'\n\nimport './styles/base.scss'\nimport './styles/header.scss'\nimport './styles/trip-form-output.scss'\nimport './styles/trip-form.scss'\n","import { BroadcastUpdatePlugin } from \"workbox-broadcast-update\";\n\n// Personal API Key for OpenWeatherMap API\nconst APIKey = '46612cfd63ae0eb9ca04308c63fd244b';\n\n// Make Date + Time\nconst makeDateAndTime = () => {\n    const today = new Date();\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    let date = `${months[today.getMonth()]} ${today.getDate()}, ${today.getFullYear()}`;\n    if (today.getHours() > 12) {\n        let dateTime = `${date} | ${today.getHours() - 12}:${today.getMinutes()} p.m.`;\n        return dateTime;\n    } else {\n        let dateTime = `${date} | ${today.getHours()}:${today.getMinutes()} a.m.`;\n        return dateTime;\n    }\n};\n\n// Event listener to add function to existing HTML DOM element\ndocument.querySelector('.submit-btn').addEventListener('click', generate);\n\n/* Function called by event listener */\nasync function generate(event) {\n    event.preventDefault();\n\n    // Get user trip dates + city\n    const tripCity = document.querySelector('.trip-city').value\n    const departDate = document.querySelector('.depart-date').value;\n    const returnDate = document.querySelector('.return-date').value;\n\n    console.log(departDate, returnDate, tripCity);\n\n    await postData('/api/add', {\n        city: tripCity,\n        departure: departDate,\n        arrival: returnDate\n    });\n\n    // await getData('/all');\n}\n\n/* Function to GET Web API Data*/\nconst getWeather = async (userZip, APIKey) => {\n    try {\n        const request = await fetch(`http://api.openweathermap.org/data/2.5/weather?zip=${userZip},us&appid=${APIKey}`);\n        return await request.json();\n    }\n    catch (e) {\n        console.log('FAILED TO FETCH WEATHER API DATA:', e);\n    }\n};\n\n/* Function to POST data */\nconst postData = async (url = '', data = {}) => {\n    try {\n        console.log(`DATA SENT TO SERVER ${makeDateAndTime()}`);\n        const response = await fetch(url, {\n            method: 'POST',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        });\n        return await response.json();\n    }\n    catch {\n        console.log('FAILED TO POST DATA TO SERVER');\n    }\n};\n\n/* Function to GET Project Data */\nconst getData = async (url) => {\n    try {\n        const request = await fetch(url);\n        const data = await request.json();\n\n        // UPDATE UI\n        document.querySelector('#journal-prompt').style.display = \"none\";\n        document.querySelector('#entryContainer').style.display = \"block\";\n\n        // entry date\n        document.querySelector('#date-label').innerHTML = data.date;\n\n        // mood / weather / temp containers\n        let mood = document.querySelector('#moodIcon');\n        let weather = document.querySelector(\"#weather\");\n        let temp = document.querySelector('#temp');\n\n        // changes mood icon + temp to match weather icon from API\n        const colorChange = (hex) => {\n            mood.style.color = hex;\n            temp.style.color = hex;\n        };\n\n        const iconColor = () => {\n            if (parseInt(data.weather.slice(0, 2)) === 3) {\n                colorChange('#f2f2f1');\n            } else if (data.weather.includes('n')) {\n                colorChange('#48484a');\n            } else if (parseInt(data.weather.slice(0, 2)) < 3) {\n                colorChange('#ec6f4d');\n            } else if (parseInt(data.weather.slice(0, 2)) === 10) {\n                colorChange('#ec6f4d');\n            } else {\n                colorChange('#48484a');\n            }\n        };\n\n        iconColor();\n\n        // mood\n        mood.classList.add(`${data.moodLabel}`);\n        // mood name\n        document.querySelector('#mood-name').innerHTML = data.mood;\n\n        // weather\n        let weatherIcon = document.querySelector('#weather').firstElementChild;\n        weatherIcon.src = `http://openweathermap.org/img/wn/${data.weather}@2x.png`;\n        // weather name\n        document.querySelector('#weather-name').innerHTML = data.weatherName;\n\n        // temp\n        temp.innerHTML = data.temp;\n        // daily high + low\n        document.querySelector('#temp-feels').innerHTML = data.highLow;\n\n        // journal entry\n        let feelings = document.querySelector('#content');\n        feelings.innerText = data.entry;\n\n        console.log(`DATA POSTED TO UI ${makeDateAndTime()}`);\n    }\n    catch (e) {\n        console.log('DATA NOT RETREIVED FROM SERVER', e);\n    }\n};\n\n// EXTRA NON RUBRIC JS\n\n// back btn actions: remove previous entries + back btn + display prompt\n// document.querySelector('#back').addEventListener('click', function () {\n// window.location.reload();\n// });\n\n// export {\n//     makeDateAndTime,\n//     generate,\n//     postData,\n//     getData,\n//     getWeather\n// }","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}