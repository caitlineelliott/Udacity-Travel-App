{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/client/index.js","webpack:///./src/client/js/addPackingItem.js","webpack:///./src/client/js/handleSubmit.js","webpack:///./src/client/js/saveTrip.js","webpack:///./src/client/js/savedTripsView.js","webpack:///./src/client/js/viewNewTrip.js","webpack:///./src/client/styles/base.scss?bb93","webpack:///./src/client/styles/header.scss?8ec8","webpack:///./src/client/styles/new-trip-view.scss?5c38","webpack:///./src/client/styles/saved-trips-view.scss?457d","webpack:///./src/client/styles/trip-form.scss?643a"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACP;AACD;AACM;AACH;AACE;AACE;AACE;AACF;AACN;;AAEjB;AACE;AACG;AACI;;;;;;;;;;;;;ACdpC;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAiE;;AAEjE;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA,sDAAsD,2BAA2B,OAAO,kBAAkB;;AAE1G,uEAAuE,OAAO;AAC9E;AACA;;AAEA;AACA;AACA,uEAAuE,OAAO;;AAE9E,+BAA+B,OAAO;;AAEtC;AACA;;AAEA;AACA;;AAEA,sDAAsD,OAAO;;AAE7D,mBAAmB,6BAA6B,OAAO,0CAA0C;;AAEjG;AACA,mCAAmC,OAAO;AAC1C;;AAEA,KAAK;AACL,qDAAqD,sCAAsC;AAC3F;AACA;;AAEA,mBAAmB,qCAAqC;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,wBAAwB,WAAW,cAAc,aAAa,2BAA2B;AAC7H;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C;;;;;;;;;;;;;;;;ACzGA;AAAA;AAAA;AAAA;AAAA;AAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd,cAAc;AACd;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC,WAAW;AAC9C,mCAAmC,WAAW;AAC9C,6BAA6B,uBAAuB,GAAG,wBAAwB;AAC/E,6BAA6B,uBAAuB,GAAG,wBAAwB;;AAE/E,kEAAkE;AAClE;AACA;;AAEA,IAAI,gEAAW;AACf;;AAEA;AACA;AACA;AACA,gEAAgE,UAAU,sBAAsB,SAAS;AACzG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mHAAmH,IAAI,OAAO,IAAI;AAClI;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAsD;;AAEtD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,sEAAsE;;AAEtG;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,0BAA0B,KAAK,0BAA0B;AAC1F;AACA;AACA;AACA;;AAEA,yCAAyC;;AAEzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC,MAAM;AAC3C,gFAAgF,MAAM;AACtF,kFAAkF,MAAM;AACxF,yEAAyE,MAAM;AAC/E,SAAS;AACT,qCAAqC,iBAAiB;AACtD,gFAAgF,mBAAmB;AACnG,kFAAkF,mBAAmB;AACrG,yEAAyE,mBAAmB;AAC5F;;AAEA;;AAEA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;;AAEA,iDAAiD,iCAAiC;;AAElF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;;AAEA,8CAA8C,iCAAiC;;AAE/E;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;;AAEnD;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;;AAEA,YAAY,2EAAsB;;AAElC;AACA,iCAAiC,2BAA2B;AAC5D;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC,qDAAqD,GAAG,qDAAqD;;AAEtJ;AACA;AACA,kDAAkD,0BAA0B,2BAA2B,eAAe;AACtH;AACA;AACA,SAAS;AACT;AACA,8CAA8C,gBAAgB,2BAA2B,eAAe;AACxG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,qBAAqB;AACpD,uEAAuE,oCAAoC;AAC3G;AACA,aAAa;AACb;AACA,+BAA+B,kBAAkB,OAAO,kCAAkC;AAC1F;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,+BAA+B,qBAAqB;AACpD,uEAAuE,oCAAoC;AAC3G;AACA,aAAa;AACb;AACA,+BAA+B,kBAAkB,OAAO,kCAAkC;AAC1F;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,+BAA+B,qBAAqB;AACpD,uEAAuE,oCAAoC;AAC3G;;AAEA,aAAa;AACb;AACA,+BAA+B,kBAAkB,OAAO,kCAAkC;AAC1F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0DAA0D,eAAe,wBAAwB,mBAAmB,oBAAoB;AACxI;AACA;AACA,+BAA+B,eAAe,YAAY,oCAAoC,2BAA2B;AACzH;;AAEA;AACA;;AAEA;AACA;AACA,sCAAsC,QAAQ,OAAO,mBAAmB;;AAExE;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC,gBAAgB;AAChD,8BAA8B,kBAAkB;AAChD,kCAAkC,kBAAkB;AACpD,iCAAiC,gBAAgB,yBAAyB;AAC1E,mCAAmC,gBAAgB,yBAAyB;;AAE5E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,qBAAqB;AAC5C,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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/client/index.js\");\n","import { makeDateAndTime } from './js/handleSubmit'\nimport { generate } from './js/handleSubmit'\nimport { getData } from './js/handleSubmit'\nimport { getUserData } from './js/savedTripsView'\nimport { viewNewTrip } from './js/viewNewTrip'\nimport { appendItem } from './js/addPackingItem'\nimport { togglePacked } from './js/addPackingItem'\nimport { viewSavedTrips } from './js/savedTripsView'\nimport { addSavedTrip } from './js/savedTripsView'\nimport { updateServer } from './js/saveTrip'\n\nimport './styles/base.scss'\nimport './styles/header.scss'\nimport './styles/trip-form.scss'\nimport './styles/new-trip-view.scss'\nimport './styles/saved-trips-view.scss'","function createElements(event) {\n    event.preventDefault();\n\n    const blockElements = {\n        \"newItemCategoryLabel\": document.createElement('div'),\n        \"newItemRow\": document.createElement('div'),\n    }\n\n    const rowElements = {\n        \"newItemValue\": document.createElement('textarea'),\n        \"editBtn\": document.createElement('button'),\n        \"deleteBtn\": document.createElement('button'),\n    }\n\n    rowElements.newItemValue.readOnly = true;\n    rowElements.newItemValue.setAttribute('style', 'resize: none; ');\n\n    let target = event.target.classList.value;\n\n    setValues(target, blockElements, rowElements);\n\n    // Toggles each item category open/closed\n    blockElements.newItemCategoryLabel.addEventListener('click', function (event) {\n        Array.from(event.target.children).forEach(function (item) {\n            if (item.classList.contains('packing-list-row')) {\n                item.classList.toggle('item-display');\n            } else if (item.classList.contains('fa-chevron-down')) {\n                item.classList.toggle('fa-chevron-up')\n            }\n        })\n    })\n}\n\nasync function setValues(target, blockElements, rowElements) {\n    blockElements.newItemCategoryLabel.innerHTML = `${document.querySelector(`.${target}-category`).value} <i class=\"fas fa-chevron-down\"></i>`;\n\n    blockElements.newItemCategoryLabel.id = document.querySelector(`.${target}-category`).value;\n    blockElements.newItemCategoryLabel.classList.add('select-categories');\n    blockElements.newItemRow.classList.add('packing-list-row');\n\n    rowElements.editBtn.innerHTML = '<i class= \"fas fa-edit\"></i>';\n    rowElements.deleteBtn.innerHTML = '<i class= \"fas fa-times\"></i>';\n    rowElements.newItemValue.defaultValue = document.querySelector(`.${target}-item`).value;\n\n    document.querySelector(`.${target}-item`).value = '';\n\n    appendItem(target, blockElements, rowElements);\n}\n\nfunction appendItem(target, blockElements, rowElements) {\n    const categoryArr = []\n\n    let appendedElements = document.querySelector(`.${target}-container`).children;\n\n    for (let i = 0; i < appendedElements.length; i++) { categoryArr.push(appendedElements[i].id); }\n\n    if (!categoryArr.includes(blockElements.newItemCategoryLabel.id)) {\n        document.querySelector(`.${target}-container`).appendChild(blockElements.newItemCategoryLabel);\n        blockElements.newItemCategoryLabel.appendChild(blockElements.newItemRow);\n\n    } else {\n        let existingRow = document.querySelector(`#${blockElements.newItemCategoryLabel.id}`);\n        existingRow.appendChild(blockElements.newItemRow);\n    }\n\n    for (let i = 0; i < Object.keys(rowElements).length; i++) {\n        blockElements.newItemRow.appendChild(Object.values(rowElements)[i]);\n        Object.values(rowElements)[i].id = Object.keys(rowElements)[i];\n        Object.values(rowElements)[i].classList.add('packing-item-row-segment');\n    }\n\n    rowElements.editBtn.addEventListener('click', editNewItems);\n    rowElements.deleteBtn.addEventListener('click', removeItems);\n}\n\nfunction editNewItems(event) {\n    let editBtn = event.target;\n    editBtn.disabled = true;\n\n    let editibleItem = event.target.previousSibling;\n    editibleItem.readOnly = false;\n    editibleItem.style = \"background-color: #c44536\"\n\n    let saveBtnNTV = document.createElement('button');\n    saveBtnNTV.innerHTML = '<i class=\"fas fa-save\"></i>';\n    saveBtnNTV.style = 'height: 6vh; box-sizing: border-box; margin: 0; color: white; width: 12vw; background-color: #c44536;'\n    editibleItem.insertAdjacentElement('afterend', saveBtnNTV);\n    saveBtnNTV.addEventListener('click', function () {\n        saveEditedItem(editBtn, editibleItem, saveBtnNTV);\n    });\n}\n\nfunction saveEditedItem(editBtn, editibleItem, saveBtnNTV) {\n    editBtn.disabled = false;\n    editibleItem.readOnly = true;\n    editibleItem.style.backgroundColor = '#83A8A6';\n    saveBtnNTV.remove();\n}\n\nfunction removeItems(event) {\n    let item = event.target.parentElement;\n    let itemCategory = event.target.parentElement.parentElement;\n\n    item.remove();\n    if (itemCategory.children.length < 2) { itemCategory.remove() }\n}\n\n\n\nexport {\n    createElements,\n    removeItems,\n    appendItem\n}","import { viewNewTrip } from './viewNewTrip'\n\n// constrain trip date inputs on #initial-request form\n// Lines 5-12 from StackOverflow: https://stackoverflow.com/questions/45529028/html-input-type-date-field-constraints\nvar today = new Date();\nvar dd = today.getDate();\nvar mm = today.getMonth() + 1;\nvar yyyy = today.getFullYear();\n\nif (dd < 10) { dd = '0' + dd }\nif (mm < 10) { mm = '0' + mm }\ntoday = yyyy + '-' + mm + '-' + dd;\n\nlet departDate = document.querySelector('.depart-date');\ndepartDate.setAttribute(\"min\", today);\n\ndocument.querySelector('.return-date').addEventListener('click', function (event) {\n    document.querySelector('.return-date').setAttribute(\"min\", departDate.value);\n})\n\n// generate trip data\ndocument.querySelector('#initial-request').addEventListener('submit', function (event) {\n    generate(event)\n});\n\nasync function generate(event) {\n    event.preventDefault();\n\n    const tripCity = document.querySelector('.user-city').value\n    const formDepart = document.querySelector('.depart-date').value;\n    const formReturn = document.querySelector('.return-date').value;\n\n    const departDate = new Date(`${formDepart} 00:00:00`);\n    const returnDate = new Date(`${formReturn} 00:00:00`);\n    const displayDepart = `${formDepart.slice(5, 7)}/${formDepart.slice(8, 10)}`\n    const displayReturn = `${formReturn.slice(5, 7)}/${formReturn.slice(8, 10)}`\n\n    const geonamesInfo = await getGeonames(tripCity, 'ceelliott'); // put username in .env file\n    const userCity = geonamesInfo.geonames[0].name;\n    const weatherInfo = await getWeatherBit(geonamesInfo.geonames[0].lat, geonamesInfo.geonames[0].lng);\n\n    viewNewTrip(userCity, departDate, returnDate, displayDepart, displayReturn, weatherInfo);\n}\n\nconst getGeonames = async (placename, username) => {\n    try {\n        const request =\n            await fetch(`http://api.geonames.org/searchJSON?q=${placename}&maxRows=1&username=${username}`);\n        return await request.json();\n    }\n    catch (e) {\n        console.log('FAILED TO FETCH GEONAMES API DATA:', e);\n    }\n};\n\nconst getWeatherBit = async (lat, lng) => {\n    try {\n        const request =\n            await fetch(`https://api.weatherbit.io/v2.0/forecast/daily?&key=9723bbea9d1b4001877f42ad8068f478&lat=${lat}&lon=${lng}&units=I`);\n        return await request.json();\n    }\n    catch (e) {\n        console.log('no weatherbit data :(', e);\n    }\n};\n\nexport {\n    generate,\n    getGeonames,\n    getWeatherBit\n}","function updateServer(userCity, departDate, returnDate, displayDepart, displayReturn, packingList, todoList, tripWeatherArr) {\n    postData('/api/trip', {\n        city: userCity,\n        departure: departDate,\n        displayDepart: displayDepart,\n        displayReturn: displayReturn,\n        arrival: returnDate,\n        packingList: packingList,\n        todoList: todoList,\n        weather: tripWeatherArr,\n    });\n}\n\nconst postData = async (url = '', data = {}) => {\n    try {\n        const response = await fetch(url, {\n            method: 'POST',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        });\n        console.log(`DATA SENT TO SERVER`);\n        return await response.json();\n    }\n    catch {\n        console.log('FAILED TO POST DATA TO SERVER');\n    }\n};\n\nexport {\n    updateServer,\n    postData\n}","import { setWeatherDOMStructure } from './viewNewTrip'\n\ndocument.querySelector('.nav-saved-trips').addEventListener('click', viewSavedTrips);\n\nasync function viewSavedTrips() {\n    document.querySelector('.new-trip-container').style.display = 'none';\n    document.querySelector('.initial-req-container').style.display = 'none';\n    document.querySelector('.trip-saved-container').style.display = 'none';\n\n    document.querySelector('h1').innerHTML = 'Saved Trips';\n\n    let savedTripsBtn = document.querySelector('.nav-saved-trips');\n    savedTripsBtn.removeEventListener('click', viewSavedTrips)\n    savedTripsBtn.innerHTML = `Book Trip`\n    savedTripsBtn.setAttribute(\"onclick\", 'location.href=\"index.html\"')\n    document.querySelector('.banner').style.backgroundImage = `url('https://images.unsplash.com/photo-1488646953014-85cb44e25828?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=933&q=80')`;\n\n    await getUserData('/all');\n}\n\nconst getUserData = async (url) => {\n    try {\n        const request = await fetch(url);\n        const tripData = await request.json();\n        displayTrip(tripData);\n    }\n    catch (e) {\n        console.log('DATA NOT RETREIVED FROM SERVER', e);\n    }\n};\n\nfunction displayTrip(tripData) {\n    if (tripData.length === 0) { document.querySelector('.no-trips-container').style.display = 'flex'; }\n\n    // Display all trips\n    for (let i = 0; i < tripData.length; i++) {\n        let tripContainer = document.querySelector('.saved-trips');\n        let newTripContainer = document.createElement('div');\n        let newTripHeading = document.createElement('div');\n        let tripDates = document.createElement('textarea');\n        let tripCity = document.createElement('div');\n        let tripActions = document.createElement('div');\n\n        const tripPackingList = document.createElement('button');\n        const tripTodoList = document.createElement('button');\n        const tripWeather = document.createElement('button');\n        const editTrip = document.createElement('button');\n        const deleteTrip = document.createElement('button');\n\n        tripDates.innerHTML = `${tripData[i].displayDepart} - ${tripData[i].displayReturn}`;\n        tripDates.readOnly = true;\n        tripCity.innerHTML = tripData[i].city;\n        editTrip.innerHTML = `<i id=\"edit\" class=\"fas fa-edit\"></i>`\n        deleteTrip.innerHTML = `<i id=\"delete\" class=\"fas fa-times\"></i>`\n\n        // editTrip.id = 'edit-trip-btn'; // why is this here?\n\n        newTripHeading.classList.add('packing-list-row');\n        tripDates.classList.add('trip-dates');\n        tripCity.classList.add('trip-city');\n        tripActions.classList.add('trip-actions');\n\n        newTripHeading.appendChild(tripDates);\n        newTripHeading.appendChild(tripCity);\n        newTripHeading.appendChild(tripActions);\n        tripActions.appendChild(tripPackingList);\n        tripActions.appendChild(tripTodoList);\n        tripActions.appendChild(tripWeather);\n        tripActions.appendChild(editTrip);\n        tripActions.appendChild(deleteTrip);\n\n        let packingListContainer = document.createElement('div');\n        let todoListContainer = document.createElement('div');\n        let weatherContainer = document.createElement('div');\n\n        packingListContainer.style.display = 'none';\n        todoListContainer.style.display = 'none';\n        weatherContainer.style.display = 'none';\n\n        newTripContainer.appendChild(newTripHeading);\n        newTripContainer.appendChild(packingListContainer);\n        newTripContainer.appendChild(todoListContainer);\n        newTripContainer.appendChild(weatherContainer);\n\n        // handle spaces in trip names for id/class setting\n        if (tripData[i].city.indexOf(' ') >= 0) {\n            let newID = tripData[i].city.replace(/\\s/g, '');\n            newTripContainer.id = `${newID}-trip`;\n            tripPackingList.innerHTML = `<i id=\"packing\" class=\"fas fa-tshirt ${newID}-trip\"></i>`\n            tripTodoList.innerHTML = `<i id=\"todo\" class=\"fas fa-clipboard-list ${newID}-trip\"></i>`\n            tripWeather.innerHTML = `<i id=\"weather\" class=\"fas fa-sun ${newID}-trip\"></i>`\n        } else {\n            newTripContainer.id = `${tripData[i].city}-trip`;\n            tripPackingList.innerHTML = `<i id=\"packing\" class=\"fas fa-tshirt ${tripCity.innerHTML}-trip\"></i>`\n            tripTodoList.innerHTML = `<i id=\"todo\" class=\"fas fa-clipboard-list ${tripCity.innerHTML}-trip\"></i>`\n            tripWeather.innerHTML = `<i id=\"weather\" class=\"fas fa-sun ${tripCity.innerHTML}-trip\"></i>`\n        }\n\n        tripContainer.appendChild(newTripContainer);\n\n        // ADD PACKING LIST DATA\n        let packedItems = tripData[i].packingList;\n        for (let i = 0; i < packedItems.length; i++) {\n            let itemRow = document.createElement('div');\n            itemRow.classList.add('saved-trip-packing-list', 'packing');\n\n            if (packedItems[i].toggle === true) { itemRow.classList.add('packed'); }\n\n            let item = document.createElement('textarea');\n            let category = document.createElement('div');\n            item.innerHTML = packedItems[i].item;\n            category.innerHTML = packedItems[i].category;\n\n            addItemRows(itemRow, item, category);\n            packingListContainer.appendChild(itemRow);\n        }\n\n        let addPackingItemsForm = document.createElement('div');\n        let rootForm = document.querySelector('.packing-list-btn-container');\n        let formWrapper = document.createElement('form');\n        let input = rootForm.parentElement.children[1].children[0].children[0];\n        let select = rootForm.parentElement.children[1].children[0].children[1];\n\n        formWrapper.classList.add('packing-list-form');\n        addPackingItemsForm.classList.add('packing-list-btn-container');\n        addPackingItemsForm.innerHTML = `<p>Missing something? Add more here:</p>`\n        addPackingItemsForm.appendChild(formWrapper)\n        formWrapper.appendChild(input);\n        formWrapper.appendChild(select);\n\n        let addMorePackBtn = document.createElement('button');\n        addMorePackBtn.classList.add('add-more-btn', 'packing-list-btn-stv');\n        addMorePackBtn.id = 'add-more-packing-stv';\n        addMorePackBtn.innerHTML = `<i class=\"fas fa-plus\"></i>`;\n\n        formWrapper.appendChild(addMorePackBtn)\n\n        packingListContainer.appendChild(addPackingItemsForm);\n        packingListContainer.id = 'packing-list'\n\n        let btnContainer = document.createElement('div');\n        btnContainer.classList.add('trip-btn-container');\n        packingListContainer.appendChild(btnContainer)\n\n        let discardPackBtn = document.createElement('button');\n        discardPackBtn.classList.add('save-trip-btn', 'discard', 'discard-packing-btn');\n        discardPackBtn.innerHTML = 'Discard Changes';\n\n        let savePackBtn = document.createElement('button');\n        savePackBtn.classList.add('save-trip-btn', 'save', 'save-packing-btn');\n        savePackBtn.innerHTML = 'Save Changes'\n\n        btnContainer.appendChild(discardPackBtn);\n        btnContainer.appendChild(savePackBtn);\n\n        // let addMorePack = document.querySelector('#add-more-packing-stv');\n        addMorePackBtn.addEventListener('click', function (event) {\n            addMoreItems(event);\n        });\n\n        discardPackBtn.addEventListener('click', discardSTVItems(todoListContainer, packingListContainer));\n        savePackBtn.addEventListener('click', saveSTVItems(tripCity, tripDates, todoListContainer, packingListContainer))\n\n        // TO DO LIST\n        let todoList = tripData[i].todoList;\n        for (let i = 0; i < todoList.length; i++) {\n            let itemRow = document.createElement('div');\n            itemRow.classList.add('saved-trip-packing-list', 'todo');\n\n            if (todoList[i].toggle === true) { itemRow.classList.add('packed'); }\n\n            let item = document.createElement('textarea');\n            let category = document.createElement('div');\n            item.innerHTML = todoList[i].item;\n            category.innerHTML = todoList[i].category;\n\n            addItemRows(itemRow, item, category)\n            todoListContainer.appendChild(itemRow);\n        }\n\n        let addTodosForm = document.createElement('div');\n        let rootTodoForm = document.querySelector('.todo-list-btn-container');\n        let todoWrapper = document.createElement('form');\n        let todoInput = rootTodoForm.parentElement.children[1].children[0].children[0];\n        let todoSelect = rootTodoForm.parentElement.children[1].children[0].children[1];\n\n        todoWrapper.classList.add('packing-list-form');\n        addTodosForm.classList.add('packing-list-btn-container');\n        addTodosForm.innerHTML = `<p>Missing something? Add more here:</p>`\n        addTodosForm.appendChild(todoWrapper)\n        todoWrapper.appendChild(todoInput);\n        todoWrapper.appendChild(todoSelect);\n\n        let addMoreTodoBtn = document.createElement('button');\n        addMoreTodoBtn.classList.add('add-more-btn', 'packing-list-btn-stv');\n        addMoreTodoBtn.id = 'add-more-packing-stv';\n        addMoreTodoBtn.innerHTML = `<i class=\"fas fa-plus\"></i>`;\n\n        todoWrapper.appendChild(addMoreTodoBtn)\n\n        todoListContainer.appendChild(addTodosForm);\n        todoListContainer.id = 'todo-list'\n\n        let todoBtnContainer = document.createElement('div');\n        todoBtnContainer.classList.add('trip-btn-container');\n        todoListContainer.appendChild(todoBtnContainer)\n\n        let discardTodoBtn = document.createElement('button');\n        discardTodoBtn.classList.add('save-trip-btn', 'discard', 'discard-todo-btn');\n        discardTodoBtn.innerHTML = 'Discard Changes';\n\n        let saveTodoBtn = document.createElement('button');\n        saveTodoBtn.classList.add('save-trip-btn', 'save', 'save-todo-btn');\n        saveTodoBtn.innerHTML = 'Save Changes';\n\n        todoBtnContainer.appendChild(discardTodoBtn);\n        todoBtnContainer.appendChild(saveTodoBtn);\n\n        addMoreTodoBtn.addEventListener('click', function (event) {\n            addMoreItems(event);\n        });\n\n        discardTodoBtn.addEventListener('click', discardSTVItems(todoListContainer, packingListContainer));\n        saveTodoBtn.addEventListener('click', saveSTVItems(tripCity, tripDates, todoListContainer, packingListContainer));\n\n        // WEATHER\n        let weatherData = tripData[i].weather;\n        weatherContainer.classList.add('forecast');\n        let tripEnd = new Date(tripData[i].arrival);\n\n        // remove old weather before trip date change\n        if (weatherContainer.children.length > 0) { weatherContainer.children.remove() }\n\n        // add new weather tripData\n        for (let i = 0; i < weatherData.length; i++) {\n            let newRow = document.createElement('div');\n            const tripDate = document.createElement('div');\n            const weatherIcon = document.createElement('img');\n            const weather = document.createElement('div');\n            weatherContainer.appendChild(newRow);\n\n            setWeatherDOMStructure(newRow, tripDate, null, weatherIcon, weather);\n\n            tripDate.innerHTML = weatherData[i].date;\n            weatherIcon.src = `${weatherData[i].weatherIcon}`;\n            weather.innerHTML = weatherData[i].weather;\n        }\n\n        // long forecast\n        let longForecast = document.createElement('div');\n\n        if (weatherData[0] !== undefined) {\n            let weatherEnd = new Date(`${weatherData[weatherData.length - 1].date.slice(0, 1)}-${weatherData[weatherData.length - 1].date.slice(2, 4)}-21`);\n\n            if (weatherEnd < tripEnd) {\n                longForecast.innerHTML = `The forecast for some of your trip dates is outside the range of our weather app.`\n                longForecast.style = 'width: 80vw; margin: 20px auto 0 auto; background-color: #83A8A6; padding: 20px;';\n                weatherContainer.appendChild(longForecast);\n            }\n        } else if (weatherData[0] === undefined) {\n            longForecast.innerHTML = `Unfortunately, your trip dates are outside the range of our weather app and we are unable to provide a forecast at this time.`\n            longForecast.style = 'width: 80vw; margin: 0 auto; background-color: #83A8A6; padding: 20px;';\n            weatherContainer.appendChild(longForecast);\n        }\n\n        // trip data actions\n        tripPackingList.addEventListener('click', displayData(packingListContainer, todoListContainer, weatherContainer))\n        tripTodoList.addEventListener('click', displayData(packingListContainer, todoListContainer, weatherContainer))\n        tripWeather.addEventListener('click', displayData(packingListContainer, todoListContainer, weatherContainer))\n        editTrip.addEventListener('click', editTripDates)\n        deleteTrip.addEventListener('click', removeData(tripData))\n    }\n}\n\n// TRIP LEVEL FUNCTIONS\nfunction displayData(packingListContainer, todoListContainer, weatherContainer) {\n    return async function (event) {\n        let allTrips = event.target.parentElement.parentElement.parentElement.parentElement.parentElement.children;\n        let trips = document.querySelector('.saved-trips').children;\n\n        // general display of data: packing, todo, weather\n        if (event.target.classList[1] === 'fa-tshirt') {\n            if (packingListContainer.style.display === 'none') {\n                packingListContainer.style.display = 'block';\n                weatherContainer.style.display = 'none';\n                todoListContainer.style.display = 'none';\n\n                for (let i = 0; i < allTrips.length; i++) {\n                    if (event.target.classList[2] !== allTrips[i].id) { allTrips[i].style = \"display: none;\" }\n                }\n            } else if (packingListContainer.style.display === 'block') {\n                packingListContainer.style.display = 'none'\n                for (let i = 0; i < trips.length; i++) { trips[i].style = 'display: block;' }\n            }\n        } else if (event.target.classList[1] === 'fa-clipboard-list') {\n            if (todoListContainer.style.display === 'none') {\n                todoListContainer.style.display = 'block';\n                packingListContainer.style.display = 'none';\n                weatherContainer.style.display = 'none';\n\n                for (let i = 0; i < allTrips.length; i++) {\n                    if (event.target.classList[2] !== allTrips[i].id) { allTrips[i].style = \"display: none;\" }\n                }\n            } else if (todoListContainer.style.display === 'block') {\n                todoListContainer.style.display = 'none'\n                for (let i = 0; i < trips.length; i++) { trips[i].style.display = 'block'; }\n            }\n        } else if (event.target.classList[1] === 'fa-sun') {\n            if (weatherContainer.style.display === 'none') {\n                weatherContainer.style.display = 'block';\n                packingListContainer.style.display = 'none';\n                todoListContainer.style.display = 'none';\n\n                for (let i = 0; i < allTrips.length; i++) {\n                    if (event.target.classList[2] !== allTrips[i].id) { allTrips[i].style = \"display: none;\" }\n                }\n\n            } else if (weatherContainer.style.display === 'block') {\n                weatherContainer.style.display = 'none';\n                for (let i = 0; i < trips.length; i++) { trips[i].style.display = 'block'; }\n            }\n        }\n    }\n}\n\nfunction editTripDates(event) {\n    let btn = event.target.parentElement;\n    let tripCity = event.target.parentElement.parentElement.parentElement.children[1].innerText;\n    let tripDates = event.target.parentElement.parentElement.parentElement.firstChild;\n    let tripCityContainer = event.target.parentElement.parentElement.parentElement.children[1];\n    let saveBtn = document.createElement('button');\n\n    btn.disabled = true;\n    tripDates.readOnly = false;\n    tripDates.style = 'background-color: rgb(196, 69, 54); height: 6.7vh; box-sizing: border-box; padding-left: 8px; margin-left: -15px;'\n    tripCityContainer.style.width = \"24%\"\n    saveBtn.innerHTML = '<i class=\"fas fa-save\"></i>';\n    saveBtn.style = 'margin: 0; height: 6.7vh; width: 10%; background-color: rgb(196, 69, 54); color: rgb(255, 255, 255);'\n    tripDates.insertAdjacentElement('afterend', saveBtn);\n\n    saveBtn.addEventListener('click', async function () {\n        saveEditedTripDates(tripDates, saveBtn);\n\n        // refresh page\n        let trips = document.querySelector('.saved-trips').children;\n        for (let i = trips.length - 1; i >= 0; i--) { trips[i].remove(); }\n\n        let newTripDates = tripDates.value;\n        let tripWeatherTestData = event.target.parentElement.parentElement.parentElement.parentElement.lastChild.firstChild.lastChild.innerText;\n\n        await changeDatesInServer(newTripDates, tripCity, tripWeatherTestData)\n        setTimeout(displayNewTrips, 1000);\n    })\n}\n\nfunction saveEditedTripDates(editedItem) {\n    let editBtn = editedItem.parentElement.children[3].children[3];\n    let saveBtn = editedItem.parentElement.children[1];\n\n    editedItem.readOnly = true;\n    editedItem.style = 'background-color: transparent; padding-top: 18px;'\n    editBtn.disabled = false;\n    saveBtn.remove();\n}\n\nasync function changeDatesInServer(newTripDates, tripCity, tripWeatherTestData) {\n    addServerData('/tripdates', {\n        city: tripCity,\n        depart: newTripDates.slice(0, 5),\n        return: newTripDates.slice(8, 13),\n        weatherTest: tripWeatherTestData,\n    });\n}\n\nasync function displayNewTrips() { await getUserData('/all') }\n\nfunction removeData() {\n    return function (event) {\n        let tripRow = event.target.parentElement.parentElement.parentElement.parentElement;\n        let tripCity = event.target.parentElement.parentElement.previousElementSibling.innerText;\n        let departDate = event.target.parentElement.parentElement.parentElement.firstChild.innerHTML.slice(0, 5);\n        let returnDate = event.target.parentElement.parentElement.parentElement.firstChild.innerHTML.slice(8, 13);\n\n        tripRow.remove();\n        deleteFromServer(tripCity, departDate, returnDate)\n    }\n}\n\nfunction deleteFromServer(tripCity, departDate, returnDate, itemToDelete) {\n    deleteServerData('/remove', {\n        city: tripCity,\n        depart: departDate,\n        return: returnDate,\n        item: itemToDelete,\n    });\n}\n\nconst deleteServerData = async (url = '', data = {}) => {\n    try {\n        const response = await fetch(url, {\n            method: 'DELETE',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        });\n        console.log(`DATA DELETED FROM SERVER`);\n        return await response.json();\n    }\n    catch {\n        console.log('FAILED TO DELETE DATA FROM SERVER');\n    }\n};\n\n\n// ITEM LEVEL FUNCTIONS\nfunction addItemRows(itemRow, item, category) {\n    let toggle = document.createElement('button');\n    item.readOnly = true;\n    let editBtn = document.createElement('button');\n    let deleteBtn = document.createElement('button');\n\n    itemRow.appendChild(toggle);\n    itemRow.appendChild(item)\n    itemRow.appendChild(category);\n    itemRow.appendChild(editBtn);\n    itemRow.appendChild(deleteBtn);\n\n    toggle.innerHTML = `<i class= \"far fa-check-square\"></i>`;\n    editBtn.innerHTML = '<i class= \"fas fa-edit\"></i>';\n    deleteBtn.innerHTML = '<i class= \"fas fa-times\"></i>';\n    deleteBtn.id = 'delete-item-btn';\n\n    toggle.style = \"width: 15vw; font-size: 1em;\"\n    item.style = \"width: 30vw; font-size: 0.9em;\"\n    category.style = \"width: 30vw; font-size: 0.9em;\"\n    editBtn.style = \"width: 15vw; font-size: 1em; background: transparent;\"\n    deleteBtn.style = \"width: 15vw; font-size: 1em; background: transparent;\"\n\n    editBtn.addEventListener('click', editItems)\n    toggle.addEventListener('click', toggleData);\n    deleteBtn.addEventListener('click', removeItem)\n}\n\nfunction saveSTVItems(tripCity, tripDates, todoListContainer, packingListContainer) {\n    return function (event) {\n        let allItemsContainer = event.target.parentElement.parentElement;\n        let allItems = event.target.parentElement.parentElement.children;\n\n        // delete items staged for removal\n        for (let i = 0; i < allItems.length; i++) {\n            while (allItemsContainer.children[i].style.display === 'none') { allItemsContainer.children[i].remove(); }\n        }\n\n        if (todoListContainer.style.display === 'block') {\n            todoListContainer.style.display = 'none';\n        } else if (packingListContainer.style.display === 'block') {\n            packingListContainer.style.display = 'none';\n        }\n\n        // return hidden trips\n        let trips = document.querySelector('.saved-trips').children;\n        for (let i = 0; i < trips.length; i++) { trips[i].style = 'display: block;' }\n\n        let itemsArr = []\n\n        for (let i = 0; i < allItems.length; i++) {\n            // removed modified designation from STV view\n            let classes = allItems[i].classList;\n            let iterator = classes.entries();\n\n            for (let value of iterator) {\n                if (value[1] === 'modified') { allItems[i].classList.remove('modified'); }\n            }\n\n            // if no list items\n            if (allItems.length < 3) {\n                let newItem = {};\n                let flag = event.target.parentElement.parentElement.id;\n                newItem['item'] = null\n\n                if (flag === 'todo-list') { newItem['listType'] = 'todo' }\n                else if (flag === 'packing-list') { newItem['listType'] = 'packing' }\n                itemsArr.push(newItem)\n            }\n            // if yes list items\n            else {\n                if (allItems[i].classList[0] === 'saved-trip-packing-list') {\n                    let newItem = {}\n                    let flag = allItems[i].classList[1]\n\n                    newItem['item'] = allItems[i].children[1].value;\n                    newItem['category'] = allItems[i].children[2].innerText;\n\n                    // cite from MDN https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/entries\n                    // iterates through classes to find packed flag and toggle\n                    let classes = allItems[i].classList;\n                    let iterator = classes.entries();\n\n                    for (let value of iterator) {\n                        if (value[1] === 'packed') { newItem['toggle'] = true }\n                        else { newItem['toggle'] = false; }\n                    }\n\n                    if (flag === 'todo') { newItem['listType'] = 'todo' }\n                    else if (flag === 'packing') { newItem['listType'] = 'packing' }\n\n                    itemsArr.push(newItem)\n                }\n            }\n        }\n        updateServerLists(itemsArr, tripCity, tripDates)\n    }\n}\n\nfunction updateServerLists(itemsArr, tripCity, tripDates) {\n    addServerData('/list', {\n        city: tripCity.innerText,\n        depart: tripDates.innerHTML.slice(0, 5),\n        return: tripDates.innerHTML.slice(8, 13),\n        list: itemsArr\n    });\n}\n\nconst addServerData = async (url = '', data = {}) => {\n    try {\n        const response = await fetch(url, {\n            method: 'POST',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        });\n        console.log(`DATA POSTED TO SERVER`);\n        return await response.json();\n    }\n    catch (e) {\n        console.log('FAILED TO POST DATA TO SERVER');\n        console.log(e)\n    }\n};\n\nfunction discardSTVItems(todoListContainer, packingListContainer) {\n    return function (event) {\n        if (todoListContainer.style.display === 'block') {\n            todoListContainer.style.display = 'none';\n            let children = todoListContainer.children;\n\n            // return hidden trips\n            let trips = document.querySelector('.saved-trips').children;\n            for (let i = 0; i < trips.length; i++) { trips[i].style = 'display: block;' }\n\n            for (let i = 0; i < children.length; i++) {\n                // remove items added via add more\n                if (children[i].classList[2] == 'new-todo-item') { children[i].remove(); }\n\n                // return 'deleted' items\n                if (children[i].style.display = 'none') { children[i].style.display = 'flex'; }\n\n                // fix toggle modifications\n                let classes = children[i].classList;\n                let iterator = classes.entries();\n\n                for (let value of iterator) {\n                    if (value[1] === 'modified') { children[i].classList.toggle('packed'); }\n                }\n            }\n        } else if (packingListContainer.style.display === 'block') {\n            packingListContainer.style.display = 'none';\n\n            let children = packingListContainer.children;\n            for (let i = 0; i < children.length; i++) {\n                // remove items added via add more\n                if (children[i].classList[2] == 'new-packing-item') { children[i].remove(); }\n\n                // return 'deleted' items\n                if (children[i].style.display = 'none') { children[i].style.display = 'flex'; }\n\n                // fix toggle modifications\n                let classes = children[i].classList;\n                let iterator = classes.entries();\n\n                for (let value of iterator) {\n                    if (value[1] === 'modified') { children[i].classList.toggle('packed'); }\n                }\n            }\n        }\n\n        try {\n            let allTrips = event.target.parentElement.parentElement.parentElement.parentElement.children;\n            for (let i = 0; i < allTrips.length; i++) { allTrips[i].style = \"display: block;\" }\n        } catch (e) { console.log(e) }\n    }\n};\n\nfunction editItems(event) {\n    let editedItem = event.target.parentElement.parentElement.children[1];\n    let btn = event.target.parentElement;\n    let saveBtn = document.createElement('button');\n\n    editedItem.readOnly = false;\n    editedItem.style = 'width: 50vw; background-color: #c44536; color: \"#fff\"; box-sizing: border-box; padding: 10px 0 0 20px; height: 5vh;';\n    editedItem.insertAdjacentElement('afterend', saveBtn);\n\n    btn.disabled = true;\n\n    saveBtn.innerHTML = '<i class=\"fas fa-save\"></i>';\n    saveBtn.style = 'margin: 0; padding: 0; background-color: #c44536; color: \"#fff\"; width: 12vw; height: 5vh;'\n    saveBtn.addEventListener('click', function () { saveEditedItem(editedItem); })\n}\n\nfunction saveEditedItem(editedItem) {\n    let editBtn = editedItem.parentElement.children[4];\n    let saveBtn = editedItem.parentElement.children[2];\n\n    editedItem.readOnly = true;\n    editedItem.style = 'background-color: transparent; padding-top: 18px;'\n    editBtn.disabled = false;\n    saveBtn.remove();\n}\n\nfunction addMoreItems(event) {\n    event.preventDefault();\n\n    let itemRow = document.createElement('div');\n    let item = document.createElement('textarea');\n    let category = document.createElement('div');\n    let nextItem = event.target.parentElement.children[0].value;\n    let nextCat = event.target.parentElement.children[1].value;\n    item.innerHTML = nextItem;\n    category.innerHTML = nextCat;\n\n    addItemRows(itemRow, item, category)\n\n    event.target.parentElement.children[0].value = '';\n\n    if (nextCat === 'Priority' || nextCat === 'High' || nextCat === 'Medium' || nextCat === 'Low') {\n        itemRow.classList.add('saved-trip-packing-list', 'todo', 'new-todo-item');\n        let todoList = event.target.parentElement.parentElement.parentElement.parentElement;\n        todoList.insertBefore(itemRow, todoList.children[0])\n    } else {\n        itemRow.classList.add('saved-trip-packing-list', 'packing', 'new-packing-item');\n        let packingList = event.target.parentElement.parentElement.parentElement.parentElement;\n        packingList.insertBefore(itemRow, packingList.children[0])\n    }\n}\n\nfunction toggleData(event) {\n    event.target.parentElement.parentElement.classList.add('modified');\n    event.target.parentElement.parentElement.classList.toggle('packed');\n}\n\nfunction removeItem(event) {\n    let item = event.target.parentElement.parentElement;\n    item.style.display = 'none';\n}\n\nexport {\n    removeData,\n    viewSavedTrips,\n    getUserData\n}","import { createElements } from './addPackingItem'\nimport { updateServer } from './saveTrip'\nimport { viewSavedTrips } from './savedTripsView'\n\nasync function viewNewTrip(userCity, departDate, returnDate, displayDepart, displayReturn, weatherInfo) {\n    document.querySelector('.initial-req-container').style.display = \"none\";\n    let newTripContainer = document.querySelector('.new-trip-container');\n    newTripContainer.style.display = \"flex\";\n\n    // Update Banner Img\n    let bannerImg = await getHeaderPhoto(userCity);\n    if (bannerImg.hits[getRandomNum(0, bannerImg.hits.length)] === undefined) {\n        console.log('undefined/no background') // TODO: add custom bg here?\n    } else {\n        document.querySelector('.banner').style.backgroundImage = `url('${bannerImg.hits[getRandomNum(0, bannerImg.hits.length)].largeImageURL}')`;\n    }\n\n    document.querySelector('h1').innerHTML = `${userCity}`;\n\n    async function getHeaderPhoto(userCity) {\n        try {\n            const request =\n                await fetch(`https://pixabay.com/api/?key=16153283-467e1a7d2957b8817b31c679d&q=${userCity}&image_type=photo&pretty=true&category=places&orientation=horizontal`);\n            return await request.json();\n        }\n        catch (e) {\n            console.log('FAILED TO FETCH GEONAMES API DATA:', e);\n        }\n    }\n\n    // Update Trip Details\n    const currentDate = new Date();\n    const monthNames = ['January', 'Februrary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\n    document.querySelector('#depart-date').innerHTML = `${monthNames[departDate.getMonth()]} ${departDate.getDate()}, ${departDate.getFullYear()}`;\n    document.querySelector('#arrive-date').innerHTML = `${monthNames[returnDate.getMonth()]} ${returnDate.getDate()}, ${returnDate.getFullYear()}`;\n    document.querySelector('#trip-days-count').innerHTML = (((((((returnDate.getTime() - departDate.getTime()) / 1000) / 60) / 60) / 24) + 1) === 1) ? `1 day` : `${(((((returnDate.getTime() - departDate.getTime()) / 1000) / 60) / 60) / 24) + 1} days`;\n    document.querySelector('#trip-nights-count').innerHTML = ((((((returnDate.getTime() - departDate.getTime()) / 1000) / 60) / 60) / 24) === 1) ? `1 night` : `${((((returnDate.getTime() - departDate.getTime()) / 1000) / 60) / 60) / 24} days`;\n    document.querySelector('#trip-days-until').innerHTML = (parseInt(((departDate - currentDate) / 1000 / 60 / 60 / 24) + 1) === 1) ? `1 day` : `${parseInt(((departDate - currentDate) / 1000 / 60 / 60 / 24) + 1)} days`;\n\n    // Update Forecast\n    let forecast = weatherInfo.data;\n    let dates = [];\n\n    for (let i = 0; i < forecast.length; i++) { dates[i] = new Date(`${forecast[i].datetime} 00:00:00`); }\n\n    let tripDaysCount = [];\n    let tripWeatherArr = [];\n    let tripWeatherContainer = document.querySelector('.forecast');\n\n    for (let i = 0; i < dates.length; i++) {\n        if (dates[i] >= departDate && dates[i] <= returnDate) {\n            let newRow = document.createElement('div');\n            tripWeatherContainer.appendChild(newRow);\n\n            let tripDates = dates[i];\n            let tripWeather = forecast[i];\n            const tripDate = document.createElement('div');\n            const weatherIcon = document.createElement('img');\n            const weather = document.createElement('div');\n\n            setWeatherDOMStructure(newRow, tripDate, tripDates, weatherIcon, weather, tripWeather, newTripContainer, tripDaysCount, tripWeatherArr);\n        }\n    }\n\n    // Handle long forecast display\n    if (tripWeatherContainer.childElementCount > 5) {\n        let showMoreDays = document.createElement('div');\n        showMoreDays.innerHTML = `Show more days <i class=\"fas fa-chevron-down\"></i>`\n        showMoreDays.classList.add('more-days');\n        tripWeatherContainer.appendChild(showMoreDays);\n\n        for (let i = 0; i < tripDaysCount.length; i++) {\n            if (i > 4) { tripDaysCount[i].style.display = \"none\"; }\n        }\n\n        showMoreDays.addEventListener('click', function () {\n            for (let i = 0; i < tripDaysCount.length; i++) {\n                if (i > 4) {\n                    if (tripDaysCount[i].style.cssText === \"display: none;\") {\n                        tripDaysCount[i].style.cssText = \"display: flex;\"\n                        showMoreDays.innerHTML = `Show fewer days <i class=\"fas fa-chevron-up\"></i>`\n                        console.log('more')\n                    } else {\n                        tripDaysCount[i].style.cssText = \"display: none;\"\n                        showMoreDays.innerHTML = `Show more days <i class=\"fas fa-chevron-down\"></i>`\n                        console.log('fewer')\n\n                    }\n                }\n            }\n        });\n    }\n\n    // Handle forecast longer than weather api data\n    let longForecast = document.createElement('div');\n\n    if (departDate > dates[15]) {\n        longForecast.classList.add('long-forecast');\n        longForecast.innerHTML = `Unfortunately, your trip dates are outside the range of our weather app and we are unable to provide a forecast at this time.`\n        tripWeatherContainer.appendChild(longForecast);\n    } else if (returnDate > dates[15]) {\n        longForecast.classList.add('long-forecast');\n        longForecast.innerHTML = `The forecast for ${(((((returnDate.getTime() - dates[15]) / 1000) / 60) / 60) / 24)} day(s) of your trip is outside the range of our weather app.`\n        tripWeatherContainer.appendChild(longForecast);\n    } else if (tripDaysCount.length < 6) {\n        tripWeatherContainer.style = \"padding-bottom: 20px;\"\n    }\n\n    // Packing & Todo Add Item Form Listeners - executed in addPackingItem.js\n    document.querySelector('.packing-list-btn').addEventListener('click', createElements);\n    document.querySelector('.todo-list-btn').addEventListener('click', createElements);\n\n    // Save Trip function\n    document.querySelector('.save').addEventListener('click', function () {\n        let packingList = []\n        let todoList = []\n\n        let items = document.querySelectorAll('.packing-list-row');\n\n        for (let i = 0; i < items.length; i++) {\n            let item = {}\n            item[\"item\"] = items[i].firstElementChild.innerHTML;\n            item[\"category\"] = items[i].parentNode.id;\n            item[\"toggleStatus\"] = false;\n\n            if (item[\"category\"] === \"High\" || item[\"category\"] === \"Medium\" || item[\"category\"] === \"Low\" || item[\"category\"] === \"Priority\") {\n                todoList.push(item)\n            } else {\n                packingList.push(item)\n            }\n        };\n\n        // Save Confirmed View\n        newTripContainer.style.display = \"none\";\n        const saveConfirmed = document.querySelector('.trip-saved-container');\n        saveConfirmed.style.display = 'flex';\n        saveConfirmed.innerHTML = `\n                <h2>Happy trails!</h2>\n                <div>Your trip details have been saved.</div>\n                <button id=\"view-saved-trips\" style=\"margin-top: 20px\">View Saved Trips</button>`\n        document.querySelector('nav').insertAdjacentElement('afterend', saveConfirmed);\n\n        let savedTripsBtn = document.querySelector('#view-saved-trips');\n        savedTripsBtn.addEventListener('click', viewSavedTrips)\n\n        let bookTripBtn = document.querySelector('.nav-saved-trips');\n        bookTripBtn.removeEventListener('click', viewSavedTrips)\n        bookTripBtn.innerHTML = `Book Trip`\n        bookTripBtn.setAttribute(\"onclick\", 'location.href=\"index.html\"')\n\n        updateServer(userCity, departDate, returnDate, displayDepart, displayReturn, packingList, todoList, tripWeatherArr);\n    });\n}\n\n// Helper Functions\n// NEED TO CITE - From MDN\nfunction getRandomNum(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction setWeatherDOMStructure(newRow, tripDate, tripDates, weatherIcon, weather, tripWeather, newTripContainer, tripDaysCount, tripWeatherArr) {\n    newRow.classList.add('forecast-row');\n    tripDate.classList.add('forecast-date');\n    newRow.appendChild(tripDate);\n\n    weatherIcon.classList.add('forecast-icon');\n    newRow.appendChild(weatherIcon);\n\n    weather.classList.add('forecast-high');\n    newRow.appendChild(weather);\n\n    if (newTripContainer) {\n        setWeatherValues(newRow, tripDate, tripDates, weatherIcon, tripWeather, weather, tripDaysCount, tripWeatherArr)\n    } else if (newTripContainer === undefined) {\n        return;\n    }\n}\n\nfunction setWeatherValues(newRow, tripDate, tripDates, weatherIcon, tripWeather, weather, tripDaysCount, tripWeatherArr) {\n    tripDate.innerHTML = `${tripDates.getMonth() + 1} /${tripDates.getDate()}`;\n    weatherIcon.src = `https://www.weatherbit.io/static/img/icons/${tripWeather.weather.icon}.png`;\n    weather.innerHTML = `${tripWeather.high_temp}°F / ${tripWeather.low_temp}°F`;\n\n    tripDaysCount.push(newRow);\n    let tripDayData = {}\n    tripDayData['date'] = tripDate.innerHTML;\n    tripDayData['weatherIcon'] = weatherIcon.src;\n    tripDayData['weather'] = weather.innerHTML;\n    tripWeatherArr.push(tripDayData);\n}\n\nexport {\n    viewNewTrip,\n    getRandomNum,\n    setWeatherDOMStructure,\n}","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}