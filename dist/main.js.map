{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/client/index.js","webpack:///./src/client/js/app.js","webpack:///./src/client/styles/base.scss?bb93","webpack:///./src/client/styles/header.scss?8ec8","webpack:///./src/client/styles/trip-form-output.scss?fa33","webpack:///./src/client/styles/trip-form.scss?643a"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACP;AACA;AACD;AACG;AACC;AACF;;AAET;AACE;AACU;AACP;;;;;;;;;;;;ACXhC;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB,GAAG,gBAAgB,IAAI,oBAAoB;AACtF;AACA,0BAA0B,KAAK,KAAK,sBAAsB,GAAG,mBAAmB;AAChF;AACA,KAAK;AACL,0BAA0B,KAAK,KAAK,iBAAiB,GAAG,mBAAmB;AAC3E;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,sDAAsD;;AAE9E;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,+BAA+B;AACxD,uBAAuB,0DAA0D,WAAW,0DAA0D;;AAEtJ,kCAAkC,kBAAkB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,0FAA0F,QAAQ,YAAY,OAAO;AACrH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C;AACA,2CAA2C,kBAAkB;AAC7D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA,8BAA8B,eAAe;AAC7C;AACA;;AAEA;AACA;AACA,8DAA8D,aAAa;AAC3E;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC,kBAAkB;AAC3D;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,I;;;;;;;;;;;;ACtKA;AAAA;;;;;;;;;;;;;ACAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;;;;;;;;;;;;;ACAA;AAAA","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/client/index.js\");\n","import { makeDateAndTime } from './js/app'\nimport { generate } from './js/app'\nimport { postData } from './js/app'\nimport { getData } from './js/app'\nimport { getWeather } from './js/app'\nimport { colorChange } from './js/app'\nimport { iconColor } from './js/app'\n\nimport './styles/base.scss'\nimport './styles/header.scss'\nimport './styles/trip-form-output.scss'\nimport './styles/trip-form.scss'\n","// Personal API Key for OpenWeatherMap API\nconst APIKey = '46612cfd63ae0eb9ca04308c63fd244b';\n\n// Make Date + Time\nconst makeDateAndTime = () => {\n    const today = new Date();\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    let date = `${months[today.getMonth()]} ${today.getDate()}, ${today.getFullYear()}`;\n    if (today.getHours() > 12) {\n        let dateTime = `${date} | ${today.getHours() - 12}:${today.getMinutes()} p.m.`;\n        return dateTime;\n    } else {\n        let dateTime = `${date} | ${today.getHours()}:${today.getMinutes()} a.m.`;\n        return dateTime;\n    }\n};\n\n// Event listener to add function to existing HTML DOM element\n// document.querySelector('#generate').addEventListener('click', generate);\n\n/* Function called by event listener */\nasync function generate(event) {\n    event.preventDefault();\n\n    // GET Weather data from ZIP + API\n    const userZip = document.querySelector('#zip').value;\n    const weather = await getWeather(userZip, APIKey);\n    const weathIcon = weather.weather[0].icon;\n    const userTemp = `${Math.trunc((weather.main.temp - 273.15) * 9 / 5 + 32)}\\u00B0`;\n\n    // GET User Data from form\n    const userDate = makeDateAndTime();\n    const userEntry = document.querySelector('#feelings').value;\n    const userMood = document.querySelector('input:checked').id;\n\n    // GET USER data labels\n    const moodName = document.querySelector('input:checked').labels[0].id;\n    const weathName = `${weather.weather[0].description}`;\n    const highLow = `${Math.trunc((weather.main.temp_max - 273.15) * 9 / 5 + 32)}\\u00B0 / ${Math.trunc((weather.main.temp_min - 273.15) * 9 / 5 + 32)}\\u00B0`;\n\n    console.log(`CAPTURED DATA! ${makeDateAndTime()}`);\n\n    await postData('/add', {\n        date: userDate,\n        mood: userMood,\n        moodLabel: moodName,\n        weather: weathIcon,\n        weatherName: weathName,\n        temp: userTemp,\n        highLow: highLow,\n        entry: userEntry\n    });\n\n    await getData('/all');\n}\n\n/* Function to GET Web API Data*/\nconst getWeather = async (userZip, APIKey) => {\n    try {\n        const request = await fetch(`http://api.openweathermap.org/data/2.5/weather?zip=${userZip},us&appid=${APIKey}`);\n        return await request.json();\n    }\n    catch (e) {\n        console.log('FAILED TO FETCH WEATHER API DATA:', e);\n    }\n};\n\n/* Function to POST data */\nconst postData = async (url = '', data = {}) => {\n    try {\n        console.log(`DATA SENT TO SERVER ${makeDateAndTime()}`);\n        const response = await fetch(url, {\n            method: 'POST',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        });\n        return await response.json();\n    }\n    catch {\n        console.log('FAILED TO POST DATA TO SERVER');\n    }\n};\n\n/* Function to GET Project Data */\nconst getData = async (url) => {\n    try {\n        const request = await fetch(url);\n        const data = await request.json();\n\n        // UPDATE UI\n        document.querySelector('#journal-prompt').style.display = \"none\";\n        document.querySelector('#entryContainer').style.display = \"block\";\n\n        // entry date\n        document.querySelector('#date-label').innerHTML = data.date;\n\n        // mood / weather / temp containers\n        let mood = document.querySelector('#moodIcon');\n        let weather = document.querySelector(\"#weather\");\n        let temp = document.querySelector('#temp');\n\n        // changes mood icon + temp to match weather icon from API\n        const colorChange = (hex) => {\n            mood.style.color = hex;\n            temp.style.color = hex;\n        };\n\n        const iconColor = () => {\n            if (parseInt(data.weather.slice(0, 2)) === 3) {\n                colorChange('#f2f2f1');\n            } else if (data.weather.includes('n')) {\n                colorChange('#48484a');\n            } else if (parseInt(data.weather.slice(0, 2)) < 3) {\n                colorChange('#ec6f4d');\n            } else if (parseInt(data.weather.slice(0, 2)) === 10) {\n                colorChange('#ec6f4d');\n            } else {\n                colorChange('#48484a');\n            }\n        };\n\n        iconColor();\n\n        // mood\n        mood.classList.add(`${data.moodLabel}`);\n        // mood name\n        document.querySelector('#mood-name').innerHTML = data.mood;\n\n        // weather\n        let weatherIcon = document.querySelector('#weather').firstElementChild;\n        weatherIcon.src = `http://openweathermap.org/img/wn/${data.weather}@2x.png`;\n        // weather name\n        document.querySelector('#weather-name').innerHTML = data.weatherName;\n\n        // temp\n        temp.innerHTML = data.temp;\n        // daily high + low\n        document.querySelector('#temp-feels').innerHTML = data.highLow;\n\n        // journal entry\n        let feelings = document.querySelector('#content');\n        feelings.innerText = data.entry;\n\n        console.log(`DATA POSTED TO UI ${makeDateAndTime()}`);\n    }\n    catch (e) {\n        console.log('DATA NOT RETREIVED FROM SERVER', e);\n    }\n};\n\n// EXTRA NON RUBRIC JS\n\n// back btn actions: remove previous entries + back btn + display prompt\n// document.querySelector('#back').addEventListener('click', function () {\n// window.location.reload();\n// });\n\n// export {\n//     makeDateAndTime,\n//     generate,\n//     postData,\n//     getData,\n//     getWeather\n// }","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}